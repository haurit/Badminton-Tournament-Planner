<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_144441_badminton.RefQualifier</api_name>
        <client_callable>false</client_callable>
        <description>Reference Qualifiers</description>
        <name>RefQualifier</name>
        <script><![CDATA[var RefQualifier = Class.create();
RefQualifier.prototype = {
	initialize: function() {
	},

	getPartnerQuery: function() {
		var aQuery = [];
		//gs.info('getPartnerQuery id: ' + current.sys_id + ' participant gender: ' + current.badminton_m2m_players_tournaments.player.user.gender + ' category gender: ' + current.category.gender + ' category type: ' + current.category.type + ' player id: ' + current.badminton_m2m_players_tournaments.sys_id);
		if (current.category.type == 'double') {
			if ((current.category.gender) && (current.category.gender != 'mixed')) {
				aQuery.push('player.user.gender=' + current.category.gender);
			} else if (current.category.gender == 'mixed') {
				aQuery.push('player.user.gender!=' + current.badminton_m2m_players_tournaments.player.user.gender);
			} else {
				aQuery.push('player.year>' + String(Number(new Date().getFullYear()) - current.badminton_m2m_players_tournaments.tournament.max_child_age));
			} // if gender same or mixed or if child
			var aParticipant = [];
			aParticipant.push(current.badminton_m2m_players_tournaments.sys_id); // cannot select self
			var grParticipantCategoryMap = new GlideRecord('x_144441_badminton_m2m_categories_badminton_m2');
			grParticipantCategoryMap.addQuery('badminton_m2m_players_tournaments.tournament', current.badminton_m2m_players_tournaments.tournament);
			grParticipantCategoryMap.addQuery('category', current.category);
			grParticipantCategoryMap.addNotNullQuery('partner');
			grParticipantCategoryMap._query();
			while (grParticipantCategoryMap._next()) {
				aParticipant.push(grParticipantCategoryMap.getValue('partner'));
			} // each participant which has already a partner
			aQuery.push('sys_idNOT IN' + aParticipant.join(','));
		} else {
			gs.addErrorMessage(gs.getMessage('category_single_no_partner_selection'));
			aQuery.push('player.user.gender=na');
		} // if not double quite
		//gs.info('RefQualifier.getPartnerQuery sQuery: ' + aQuery.join('^'));
		return aQuery.join('^');
	},

	getTournamentCategoryQuery: function(sUrl) {
		var sQuery;
		var _ServerSideTools = new ServerSideTools();
		var sParticipant = _ServerSideTools.getSysIdFromURL(sUrl);
		var grParticipant = new GlideRecord("x_144441_badminton_m2m_players_tournaments");
		if (grParticipant.get(sParticipant)) {
			var sGender = String(grParticipant.player.user.gender).toLowerCase();
			var aCat = [];
			var grTournamentCatMap = new GlideRecord("x_144441_badminton_m2m_categories_tournaments");
			grTournamentCatMap.addQuery('tournament', grParticipant.getValue('tournament'));
			if ((sGender) && (sGender != 'Not Specified')) {
				grTournamentCatMap.addQuery('category.gender', 'IN', 'mixed,' + sGender).addOrCondition('category.gender', '');
			} // if gender
			grTournamentCatMap._query();
			while (grTournamentCatMap._next()) {
				aCat.push(grTournamentCatMap.getValue('category'));
			} // each mapped category
			sQuery = 'sys_idIN' + aCat.join(',');
		} else {
			gs.info('RefQualifier.getTournamentCategoryQuery no participant: ' + sParticipant);
		} // if tournament
		return sQuery;
	},

	type: 'RefQualifier'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>tom</sys_created_by>
        <sys_created_on>2018-06-08 12:00:36</sys_created_on>
        <sys_id>8c5894c6376a130045d9ae7873990ee4</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name>RefQualifier</sys_name>
        <sys_package display_value="Badminton Tournament Planner" source="x_144441_badminton">681664313722130045d9ae7873990e88</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Badminton Tournament Planner">681664313722130045d9ae7873990e88</sys_scope>
        <sys_update_name>sys_script_include_8c5894c6376a130045d9ae7873990ee4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-06-12 14:19:16</sys_updated_on>
    </sys_script_include>
</record_update>
