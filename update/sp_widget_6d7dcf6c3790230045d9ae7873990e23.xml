<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $http, $window, spUtil, $log, spAriaUtil) {
	var c = this;
	c.message = '';
	c.skilllevelchoicelistoption = {
		hideSearch: true,
		placeholder: "Level"
	};
	c.skilllevelchoice = [{display:"Active",value: "active"}, 
					 {display:"Hobby",value: "hobby"}];
	
	
	c.filterCategories = function(oCategory) {
		if (!c.data.skilllevel) {
			return false;
		} // if no skill
		if ((oCategory.skilllevel == c.data.skilllevel) && ((oCategory.gender == String(c.data.gender).toLowerCase()) || (oCategory.gender == 'mixed'))) {
			return true;
		} // if valid
	};
	
	
	
	c.triggerSubmit = function() {
		c.submitInProgress = true;
		c.data.action = 'submit';
		if (c.submitInProgress) {
			c.server.update().then(function(response) {
				if (response.success == 'Success') {
					//$window.location.href = '?id=btp_overview';
					c.submitInProgress = false;
					c.data.success = response.success;
				} else {
					c.submitInProgress = false;
					c.data.message = response.message;
				} // if message
			});
		}
	};
}
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>btp_registration</id>
        <internal>false</internal>
        <link/>
        <name>btp_registration</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var _ServerSideTools = new ServerSideTools();
	if (!input) {
		data.bLoggedIn = gs.getSession().isLoggedIn();
		if (data.bLoggedIn == false) {
			data.redirect("\bck?id=btp_login");
			return;
		} // if logged in
		data.user = gs.getUserID();
		var grUser = new GlideRecord('sys_user');
		grUser.get(data.user);
		data.gender = grUser.getValue('gender');
		var grPlayer = new GlideRecord('x_144441_badminton_player');
		grPlayer.addQuery('user', data.user);
		grPlayer.query();
		grPlayer.next();
		data.player = grPlayer.getUniqueValue();
		//gs.info('grPlayer: ' + grPlayer.getDisplayValue());
		var grTournament = new GlideRecord('x_144441_badminton_tournament');
		grTournament.addActiveQuery();
		grTournament.query();
		if (!grTournament.next()) {
			data.message = 'Currently there is no active tournament!';
			return;
		} // if tournament
		data.tournament = grTournament.getUniqueValue();
		//gs.info('grTournament: ' + grTournament.getDisplayValue());
		data.title = 'Registration for ' + grTournament.getValue('short_description');
		var grParticipant = new GlideRecord('x_144441_badminton_m2m_players_tournaments');
		grParticipant.addQuery('player', grPlayer.getUniqueValue());
		grParticipant.addQuery('tournament', data.tournament);
		grParticipant.query();
		grParticipant.next();
		//gs.info('grParticipant: ' + grParticipant.getDisplayValue());
		data.action = '';
		data.success = '';
		data.message = '';
		data.categories = [];
		var grRegisteredCategories;
		var grCategories = new GlideRecord('x_144441_badminton_m2m_categories_tournaments');
		grCategories.addQuery('tournament', grTournament.getUniqueValue());
		grCategories.query();
		var sTmpQuery = '';
		var oPartner = {};
		var sSkillLevel = '';
		var bSelected = false;
		while (grCategories.next()) {
			//gs.info('grCategories: ' + grCategories.category.name);
			bSelected = false;
			sTmpQuery = '';
			oPartner = {name: 'partner'};
			if (grCategories.category.type == 'double') {
				sTmpQuery =  _ServerSideTools.getPartnerQuery(data.player, data.gender, grCategories.category.sys_id, grCategories.category.gender, data.tournament);
			} // if double
			grRegisteredCategories = new GlideRecord('x_144441_badminton_m2m_categories_badminton_m2');
			grRegisteredCategories.addQuery('badminton_m2m_players_tournaments', grParticipant.getUniqueValue());
			grRegisteredCategories.addQuery('category', grCategories.category);
			grRegisteredCategories.query();
			if (grRegisteredCategories.next()) {
				bSelected = true;
				sSkillLevel = (sSkillLevel) ? sSkillLevel : String(grCategories.category.skilllevel);
				oPartner = {name: 'partner', displayValue: String(grRegisteredCategories.partner.player.name), value: String(grRegisteredCategories.partner.player.sys_id)};
				//gs.info('partner: ' + JSON.stringify(oPartner));
			} // if registered
			data.categories.push({name: grCategories.category.getDisplayValue('name'), gender: String(grCategories.category.gender), skilllevel: String(grCategories.category.skilllevel), type: String(grCategories.category.type), partner: oPartner, selected: bSelected, query: sTmpQuery});
		} // while tournament
		data.skilllevel = sSkillLevel;
		//gs.info('sSkillLevel: ' + sSkillLevel + ' Cat: ' + JSON.stringify(data.categories));
	} else {
		if (input.action == 'xxx') {

		} else if (input.action == 'submit') {
			data.success = 'Success';
			gs.info('BTP Registration Result: ' + JSON.stringify(input.categories));
		} // if action
	} // if input
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>tom</sys_created_by>
        <sys_created_on>2018-08-30 09:06:29</sys_created_on>
        <sys_id>6d7dcf6c3790230045d9ae7873990e23</sys_id>
        <sys_mod_count>76</sys_mod_count>
        <sys_name>btp_registration</sys_name>
        <sys_package display_value="Badminton Tournament Planner" source="x_144441_badminton">681664313722130045d9ae7873990e88</sys_package>
        <sys_policy/>
        <sys_scope display_value="Badminton Tournament Planner">681664313722130045d9ae7873990e88</sys_scope>
        <sys_update_name>sp_widget_6d7dcf6c3790230045d9ae7873990e23</sys_update_name>
        <sys_updated_by>tom</sys_updated_by>
        <sys_updated_on>2018-08-30 20:13:17</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading ng-scope">
    <h3 class="panel-title">{{::data.title}}</h3>
  </div>
  <div ng-if="c.data.message" class="wrapper-md clearfix b-t">
    <div ng-if="c.data.message" class="alert alert-danger ng-binding ng-scope" role="alert" style="">
      {{c.data.message}}
    </div>
    <div ng-if="c.data.success" class="alert alert-success ng-binding ng-scope" role="alert" style="">
      {{c.data.success}}
    </div>
  </div>
  <div ng-if="data.tournament" class="wrapper-md clearfix b-t">
    <div class="list-group list-group-sm"> 
      <div class="list-group-item"> 
        <label for="skilllevel">${Skill Level}</label>
        <sn-choice-list sn-model="c.data.skilllevel" sn-options="c.skilllevelchoicelistoption" sn-value-field="value" sn-text-field="display" sn-items="c.skilllevelchoice" on-change="c.getCategories()"></sn-choice-list>
      </div>
      <div ng-repeat = "category in c.data.categories | filter:c.filterCategories | orderBy:type:true">
        <input type="checkbox" ng-model="category.selected" value="">
        <label for="selected">{{category.name}}</label>
        <div ng-if="category.selected && category.type=='double'">
          <label for="partner">${Partner}</label>
          <sn-record-picker placeholder="${Partner}" field="category.partner" table="'x_144441_badminton_player'" display-field="'name'" value-field="'sys_id'" search-fields="'name'" page-size="100" default-query="category.query"></sn-record-picker>
        </div>
      </div>      
      <button ng-disabled="c.submitInProgress" name="submit" ng-click="c.triggerSubmit()" class="btn btn-lg btn-primary btn-block">
        <span ng-show="!c.submitInProgress">${Submit}</span>
        <span ng-show="c.submitInProgress">${Saving...}</span>
      </button>
    </div>]]></template>
    </sp_widget>
</record_update>
